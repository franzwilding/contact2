<% @person.address = Address.new if @person.address.nil? %>

<%= form_for(@person, :html => {:multipart => true}) do |f| %>
  
  <%= render :partial => 'shared/form_error', :locals => {:errors => @person.errors} %>
	
	<fieldset>
		
		<legend>Stammdaten</legend>
		
	  <%= f.label :firstname %>
	  <%= f.text_field :firstname %>
	
	  <%= f.label :surname %>
	  <%= f.text_field :surname %>
	
	  <%= f.label :email %>
	  <%= f.email_field :email %>
	
	  <%= f.label :phone %>
	  <%= f.telephone_field :phone %>
	  
	  <%= f.label :avatar %>
	  <input id="person_avatar" name="person[avatar]" type="file" size="17" />
	  	  
	</fieldset>
	
	<fieldset>
		
		<legend>Adresse</legend>
    <%= f.fields_for :address do |a| %>
      
      <%= a.label :street %>
      <%= a.text_field :street %>
      
      <%= a.label :number %>
      <%= a.text_field :number %>
      
      <%= a.label :PLZ %>
      <%= a.text_field :PLZ %>
      
      
      
      <% ##### CITY STARTS ##### %>
      <label for="city">City: </label>
      <div class="findpeople_box">
        <input id="city" type="text" autocomplete="off"  class="findpeople" name="city" value="<%= @person.city.name if @person.city %>" />
        <p class="loading">Laden...</p>
      </div>
      
      <ul id="city_find_list" class="input_dropdown">
      </ul>
      
      <script type="text/javascript">
        
        $(document).ready(function(){
          
          //set my ajaxList-plugin to the ul
      		$("#city_find_list").fwAjaxList({
      			'loadingHTML'							: '<p class="loading">Laden...</p>', 
      			'createUrlFunction'				:	createUrl, 
      			'formatRowFunction'				: formatRow, 
      			'finishedUpdateFunction'	: finishedUpdate, 
      			'updateOnScroll'          : false
      		});
      		
      		
      		//update list on search-value-change
      		var old_timestamp = 0;
      		
      		$("input#city").keyup(function(event){
      	
      			//request nur jede 0.5 sec. wenn leute schnell tippen, killt das sonst den server
      			if(event.timeStamp - old_timestamp > 500) {
      				
      				$(this).next().show();
      				
      				$("#city_find_list").fwAjaxList("update");
      				old_timestamp = event.timeStamp;
      			}
      		});
      		
      		//when the user selects an item
      		$("input#city").parent().parent().mouseleave(function(){
            $("#city_find_list").slideUp();
          });
    			
    			//add / remove person
    			$("#city_find_list li").live("click", function(){

        		$("input#city").val($(this).find("h3 a").text());
        		$("#city_find_list").slideUp();
        		
        	});
        	
        	$("input#city").live("blur", function(){
            $("input#city").next().val($("input#city").val());
        	});
        	
        	add_keyboard_support_for_list("input#city", "#city_find_list", function(time){ old_timestamp = time; });
        	
        });
      	
      	
      	/**
      	 * createUrl()
      	 *
      	 * this function returns the url for the ajax-request.
      	 * you should put the query-logic in here and have to 
      	 * return the url as string
      	 */
      	var createUrl = function(init) {
      		
      		limit = 20;
      		query = $("input#city").val();
      		url = "/cities.json?query=" + query;
      		
      		return url;
      	}
      	
      	/**
      	 * formatRow(data)
      	 * 
      	 * this functions has the data of a response-row-object as argument
      	 * you have to return the final html-code for this row, inclusive li-tags
      	 */
      	var formatRow = function(data) {
      		return format_name_list(data["city"]);
      	}
      	
      	
      	/**
      	 * finishedUpdate
      	 *
      	 * this callback is called, whenever an update finished
      	 * you can use this function to hide loading-animation or so
      	 */
      	var finishedUpdate = function() {
    			$("#city_find_list").slideDown();
    			$("input#city").next().fadeOut();
      	}
    		
      </script>
      <% ##### CITY ENDS ##### %>
      
      
      
      
      
      
      <% ##### PROVINCE STARTS ##### %>
      <label for="province">Province: </label>
      <div class="findpeople_box">
        <input id="province" type="text" autocomplete="off"  class="findpeople" name="province" value="<%= @person.province.name if @person.province %>" />
        <p class="loading">Laden...</p>
      </div>
      
      <ul id="province_find_list" class="input_dropdown">
      </ul>
      
      <script type="text/javascript">
        
        $(document).ready(function(){
          
          //set my ajaxList-plugin to the ul
      		$("#province_find_list").fwAjaxList({
      			'loadingHTML'							: '<p class="loading">1Laden...</p>', 
      			'createUrlFunction'				:	p_createUrl, 
      			'formatRowFunction'				: p_formatRow, 
      			'finishedUpdateFunction'	: p_finishedUpdate,
      			'updateOnScroll'          : false
      		});
      		
      		//update list on search-value-change
      		var old_timestamp1 = 0;
      		
      		$("input#province").keyup(function(event){
      	
      			//request nur jede 0.5 sec. wenn leute schnell tippen, killt das sonst den server
      			if(event.timeStamp - old_timestamp1 > 500) {
      				console.log("keyup");
      				$(this).next().show();
      				
      				$("#province_find_list").fwAjaxList("update");
      				old_timestamp1 = event.timeStamp;
      			}
      		});
      		
      		//when the user selects an item
      		$("input#province").parent().parent().mouseleave(function(){
            $("#province_find_list").slideUp();
          });
    			
    			//add / remove person
    			$("#province_find_list li").live("click", function(){

        		$("input#province").val($(this).find("h3 a").text());
        		$("#province_find_list").slideUp();
        		
        	});
        	
        	$("input#province").live("blur", function(){
            $("input#province").next().val($("input#province").val());
        	});
        	
        	add_keyboard_support_for_list("input#province", "#province_find_list", function(time){ old_timestamp1 = time; });
          
        	        	
        });
      	
      	
      	/**
      	 * createUrl()
      	 *
      	 * this function returns the url for the ajax-request.
      	 * you should put the query-logic in here and have to 
      	 * return the url as string
      	 */
      	var p_createUrl = function(init) {
      		
      		limit = 20;
      		query = $("input#province").val();
      		url = "/provinces.json?query=" + query;
      		
      		return url;
      	}
      	
      	/**
      	 * formatRow(data)
      	 * 
      	 * this functions has the data of a response-row-object as argument
      	 * you have to return the final html-code for this row, inclusive li-tags
      	 */
      	var p_formatRow = function(data) {
      		return format_name_list(data["province"]);
      	}
      	
      	
      	/**
      	 * finishedUpdate
      	 *
      	 * this callback is called, whenever an update finished
      	 * you can use this function to hide loading-animation or so
      	 */
      	var p_finishedUpdate = function() {
    			$("#province_find_list").slideDown();
    			$("input#province").next().fadeOut();
      	}
    		
      </script>
      <% ##### PROVINCES ENDS ##### %>
      
      

            
    <% end %>
	</fieldset>
	
	<fieldset>
		
		<legend>Web 2.0</legend>
		
	  <%= f.label :facebook %>
	  <%= f.url_field :facebook %>
	
	  <%= f.label :twitter %>
	  <%= f.text_field :twitter %>
	
	  <%= f.label :website %>
	  <%= f.text_field :website %>

	</fieldset>
	
	<% @fields.each do |group| %>
		<fieldset>
			<legend><%= group.name %></legend>
			
			<% group.fields.each do |field| %>
				
				<% if field.itype != "BOOLEAN" %>
					<label for="field_<%= field.id %>"><%= field.label %></label>
				<% end %>
				
				<%
					value = ""
					value = @person.fieldvalues.find_by_field_id(field.id).value if @person.fieldvalues.find_by_field_id(field.id)
				%>
				
				<% case field.itype
					 when "STRING" %>
				  <input type="text" id="field_<%= field.id %>" name="field[<%= field.id %>]" value="<%= value %>" size="30" />
				<% when "TEXT" %>
					<textarea  id="field_<%= field.id %>" name="field[<%= field.id %>]"><%= value %></textarea>
				<% when "BOOLEAN" %>
					<input id="field_<%= field.id %>" type="checkbox" name="field[<%= field.id %>]" 
						<% if value == "on" %>
							checked="checked"
						<% end %>/>
					<label for="field_<%= field.id %>"><%= field.label %></label>
				<% end %>
				

				
			<% end %>
			
			
		</fieldset>		
	<% end %>
  
  <fieldset class="addpassword">  	 
    <legend>Soll sich dieser User einlochen können?</legend>
    <div class="content">
     <%= f.label :password %>
     <%= f.password_field :password %>
    
     <%= f.label :password_confirmation %>
     <%= f.password_field :password_confirmation %>
    </div>
	</fieldset>
  
  <script type="text/javascript">
    $(document).ready(function($) {
      var height = $("fieldset.addpassword .content").height();
      
      $("fieldset.addpassword .content").css("height", 0);
      $("fieldset.addpassword .content").css("overflow", "hidden");
      $("fieldset.addpassword legend").css("cursor", "pointer");
      
      $("fieldset.addpassword legend").click(function(){
        if($(this).next().height() == 0) {
          $(this).next().animate({
            height: height+10
          }, 400);
        } else {
          $(this).next().animate({
            height: 0
          }, 400);
        }
      });
    });
	</script>
	<hr />
  
  <%= f.submit "Speichern" %>
  <%= link_to 'Löschen', @person, :confirm => 'Soll dieser User wirklich unwiderruflich gelöscht werden?', :method => :delete, :class => 'delete' %></td>
<% end %>
