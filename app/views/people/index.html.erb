<h1 class="h">Listing people</h1>

<form class="search">
	<fieldset>
		<legend>Suchen</legend>
		
		<div class="search_box">
			<input class="search" type="text" value="Suchbegriff eingeben" />
			<p class="loading">Laden...</p>
		</div>
		<button>Suchen</button>
		<br />
		
		<h3>Beschränken auf:</h3>
		<ul>
		  <% @whereable.each do |key, value| %>
		  <li>
		    <% if(value.kind_of?(Array)) %>
		      <select>
		          <option value="">All <%= key %></option>
		        <% value.each do |item| %>
		          <option value="<%= item %>"><%= item %></option>
		        <% end %>
		      </select>
		    <% else %>
		      <input type="checkbox" />
  			 <label><%= key %></label>
		    <% end %>
		  </li>
		  <% end %>
		</ul>
		
		<br />
		
		<h3>Sortieren nach:</h3>
		<ul>
			<li>
				<select>
				  <% @sortable.each do |item| %>
				    <option value="<%= item %>"><%= item %></option>
				  <% end %>
				</select>
			</li>
		</ul>
		
	</fieldset>
</form><!-- form.search ends here -->

<div class="add button">
	<a href="<%= new_person_path %>">Eine neue Person hinzufügen</a>
</div>

<div class="export button">
	<a href="#" class="tooltip">Diese Suche verwenden</a>
	<div class="h">
		<ul class="tooltip_menu">
			<li><a href="">Diese Auswahl als Liste speichern</a></li>
			<li><a href="">Diese Auswahl als Excel-Datei herunterladen</a></li>
			<li><a href="">Diese Auswahl als CSV-Datei herunterladen</a></li>
		</ul>
	</div>
</div>

<hr />

<ul class="list">
	<li class="loading">
		<p class="loading">Laden...</p>
	</li>
</ul>

<script type="text/javascript">
	
	var init_search_input;
	
	$(document).ready(function(){
		
		
		//set fieldgroups as variable
		var fieldgroups = $.parseJSON('<%= raw @fieldgroups.to_json(:include => :fields) %>');
		
		
		//set initial search-input value
		init_search_input = $("form.search input.search").val();		
		
		//load details on current user
		$("a.showdetails").live("click", function(){
			$(this).removeClass("showdetails");
			$(this).addClass("hidedetails");

			var details = $(this).parent().parent().find("div.details");
			details.slideDown("fast");
			
			//wenn dieser content noch nicht geladen wurde
			if(details.html() == "") {
				
				details.html('<p class="loading">Laden...</a></p>');
				
				$.get("people/" + $(this).parent().parent().attr("name") + '.json', function(data){			
					details.html(format_details(data["person"], fieldgroups));
				});
				
			}	
		});
		
		$("a.hidedetails").live("click", function(){
			$(this).removeClass("hidedetails");
			$(this).addClass("showdetails");
			$(this).parent().parent().find("div.details").slideUp("fast");
		});
		
		
		//set my ajaxList-plugin to the ul
		$("ul.list").fwAjaxList({
			'loadingHTML'							: '<p class="loading">Laden...</p>', 
			'createUrlFunction'				:	createUrl, 
			'formatRowFunction'				: formatRow, 
			'finishedUpdateFunction'	: finishedUpdate
		});
		
		
		//update list on search-value-change
		
		var old_timestamp = 0;
		
		$("input.search").keyup(function(event){
	
			//request nur jede 0.5 sec. wenn leute schnell tippen, killt das sonst den server
			if(event.timeStamp - old_timestamp > 500) {
				
				$(this).next().show();
				
				$("ul.list").fwAjaxList("update");
				old_timestamp = event.timeStamp;
			}
		});
		
	});
	
	
	/**
	 * createUrl()
	 *
	 * this function returns the url for the ajax-request.
	 * you should put the query-logic in here and have to 
	 * return the url as string
	 */
	var createUrl = function(init) {
		
		limit = 20;
		
		if(init) offset = 0;
		else offset = $("ul.list > li").size();
		
		query = $("form.search input.search").val();
		if(query == init_search_input) query		= "";
		
		url = "/people.json?limit= " + limit + " &offset=" + offset + "&query=" + query;
		
		return url;
	}
	
	/**
	 * formatRow(data)
	 * 
	 * this functions has the data of a response-row-object as argument
	 * you have to return the final html-code for this row, inclusive li-tags
	 */
	var formatRow = function(data) {
		return format_interaction_list(data["person"]);
	}
	
	
	/**
	 * finishedUpdate
	 *
	 * this callback is called, whenever an update finished
	 * you can use this function to hide loading-animation or so
	 */
	var finishedUpdate = function() {
		$("input.search").next().fadeOut();
	}
	
</script>